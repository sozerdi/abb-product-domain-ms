plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.sonarqube' version '4.4.1.3373'
    id 'jacoco'
    id 'checkstyle'
    id 'pmd'
}

group = 'az.abb'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

checkstyle {
    toolVersion = '10.3.3'
}

repositories {
    mavenCentral()
    maven {
        url "https://nexus.abb-bank.az/repository/abb-maven/"
        allowInsecureProtocol = true
    }
    maven {
        url "${nexusUrl}/repository/maven-releases/"
        credentials {
            username "$nexusUsername"
            password "$nexusPassword"
        }
        allowInsecureProtocol = true
    }
}

ext {
    set('logbackEncoderVersion', "7.3")
    set('liquibaseCoreVersion', "4.22.0")
    set('mapstructVersion', "1.5.5.Final")
    set('openapiVersion', "2.8.4")
    set('hsqldb', "2.7.1")
    set('springCloudVersion', "2024.0.0")
    set('checkstyleToolVersion', "10.20.0")
    set('javaSDKVersion', "1.28.1")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation "org.springframework.boot:spring-boot-starter-webflux"
    implementation 'org.codehaus.janino:janino'
    implementation "io.temporal:temporal-spring-boot-starter:$javaSDKVersion"
    implementation("org.apache.commons:commons-lang3:3.17.0")
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation 'az.ibar.oracle.flexcube:FCUBSFTService:1.0'
    implementation "org.springframework.ai:spring-ai-mcp-server-webflux-spring-boot-starter:1.0.0-M6"

    compileOnly 'org.projectlombok:lombok:1.18.30'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'


    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

checkstyle {
    toolVersion = "${checkstyleToolVersion}"
    configFile = file("${rootProject.projectDir}/checkstyle/checkstyle.xml")
    ignoreFailures = false
}

tasks.withType(Checkstyle).configureEach {
    reports {
        xml.required.set(true)
        html.required.set(true)
    }
}

jacocoTestReport {
    reports {
        xml.required.set(true)
        html.required.set(true)
    }
}


sonarqube {
    properties {
        property 'sonar.java.coveragePlugin', 'jacoco'
        property 'sonar.scm.forceReloadAll', 'true'
    }
}

bootJar {
    archiveFileName = 'app.jar'
}
